<link rel="stylesheet" type="text/css" href="https://js.cit.api.here.com/v3/3.0/mapsjs-ui.css"/>
<script type="text/javascript" src="https://js.cit.api.here.com/v3/3.0/mapsjs-core.js"></script>
<script type="text/javascript" src="https://js.cit.api.here.com/v3/3.0/mapsjs-service.js"></script>
<script type="text/javascript" src="https://js.cit.api.here.com/v3/3.0/mapsjs-ui.js"></script>
<script type="text/javascript" src="https://js.cit.api.here.com/v3/3.0/mapsjs-mapevents.js"></script>

<p id="notice"><%= notice %></p>

<div class="mentor-list-page">


  <h1>Today's 20 Mentors</h1>
  <h2>Undecided will be refreshed tomorrow!</h2>
  <br>

<div align="center table-responsive">
  <table class="table table-borderless">

    <tbody>
    <% @mentors.each do |mentor| %>
        <tr>
          <td rowspan="2">
            <!--image-->
           <%=image_tag mentor.image, class: "img-circle"  %>
          </td>
        </tr>
        <tr>
          <td>
            <table class="">
               <tr>
                <td colspan="4"><%= link_to mentor.name, mentor_path(mentor), class: "mentor-personal-info" %> <%= mentor.age %> </td>
                </tr>
              <tr>
                <!--Location-->
                <td colspan="4" style="color: #fff;"> <%= mentor.location %></td>
              </tr>
              <tr>
                <!--Description-->
                <td colspan="4"><p class="info mentor-list-desc"> <%= mentor.description %> <p></td>
              </tr>
            </table>
          </td>
        </tr>
        <%end%>
    </tbody>
  </table>
</div>
</div>

<div id="map" style="width: 100%; height: 400px; background: grey"/>

<script type="text/javascript" charset="UTF-8">

    /**
 * Creates a new marker and adds it to a group
 * @param {H.map.Group} group       The group holding the new marker
 * @param {H.geo.Point} coordinate  The location of the marker
 * @param {String} html             Data associated with the marker
 */
    function addMarkerToGroup(group, coordinate, html) {
        var marker = new H.map.Marker(coordinate);
        // add custom data to the marker
        marker.setData(html);
        group.addObject(marker);
    }

    /**
 * Add two markers showing the position of Liverpool and Manchester City football clubs.
 * Clicking on a marker opens an infobubble which holds HTML content related to the marker.
 * @param  {H.Map} map      A HERE Map instance within the application
 */
    function addInfoBubble(map) {
        var group = new H.map.Group();

        map.addObject(group);

        // add 'tap' event listener, that opens info bubble, to the group
        group.addEventListener('tap', function (evt) {
            // event target is the marker itself, group is a parent event target for all objects that it contains
            var bubble = new H.ui.InfoBubble(evt.target.getPosition(), {
                // read custom data
                content: evt.target.getData()
            });
            // show info bubble
            ui.addBubble(bubble);
        }, false);

        <% if @mentors.present? %>
  <%  @mentors.each do |mentor| %>
      addMarkerToGroup(group, {lat:<%= mentor.latitude %>, lng:<%= mentor.longitude %>},
    '<div style=\'width: 150px; height: 50px;\'> <center><a  href=\'mentors\<%= mentor.id %>\'><%= mentor.name %></center></div>');
   <% end %>
  <% end %>
    }

    /**
 * Boilerplate map initialization code starts below:
 */

    // initialize communication with the platform
    var platform = new H.service.Platform({app_id: 'DemoAppId01082013GAL', app_code: 'AJKnXv84fjrb0KIHawS0Tg', useCIT: true, useHTTPS: true});
    var defaultLayers = platform.createDefaultLayers();

    // initialize a map - this map is centered over Europe
    var map = new H.Map(document.getElementById('map'), defaultLayers.normal.map, {
        center: {
            lat: 49.259219,
            lng: -123.130777
        },
        zoom: 14
    });

    // MapEvents enables the event system Behavior implements default interactions for pan/zoom (also on mobile touch environments)
    var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

    // create default UI with layers provided by the platform
    var ui = H.ui.UI.createDefault(map, defaultLayers);

    // Now use the map as required...
    addInfoBubble(map);
</script>
